table(df_actual$cancer)
clean_actual <- function(datadir) {
df_actual <- read.table(file=datadir, sep=',', skip=1)
names(df_actual)[names(df_actual) == "V1"] <- "patient"
names(df_actual)[names(df_actual) == "V2"] <- "cancer"
return(df_acutal)
}
clean_actual(data_cfg$raw_actual)
data_cfg<- fromJSON(file='config/data-params.json')
data_cfg<- fromJSON(file='config/data-params.json')
library(data.table)
library("rjson")
data_cfg<- fromJSON(file='config/data-params.json')
setwd("~/Class/DSC 180B/dsc180b-compressed")
data_cfg<- fromJSON(file='config/data-params.json')
clean_actual(data_cfg$raw_actual)
clean_actual(data_cfg$raw_actual)
df_actual = read.table(file=datadir, sep=',', skip=1)
df_actual = read.table(file=data_cfg$raw_actual, sep=',', skip=1)
clean_actual(data_cfg$raw_actual)
clean_actual(data_cfg$raw_actual)
clean_actual(data_cfg$raw_actual)
View(df_actual)
clean_actual(data_cfg$raw_actual)
train_stats <- function(data) {
#find the t statistics, degrees of freedom, and p values of the training set
g1 = 3:29 #ALL patients
g2 = 30:40 #AML patients
t.stat = apply(X=data, MARGIN=1, FUN=function(X){t.test(as.numeric(X[g1]),as.numeric(X[g2]))$statistic})
df = apply(X=data, MARGIN=1, FUN=function(X){t.test(as.numeric(X[g1]),as.numeric(X[g2]))$parameter})
p.value = apply(X=data, MARGIN=1, FUN=function(X){t.test(as.numeric(X[g1]),as.numeric(X[g2]))$p.value})
train_list = list(t.stat, df, p.value)
names(train_list) = c('t.stat','df','p.value')
return(train_list)
}
data_cfg<- fromJSON(file='config/data-params.json')
clean_data()
df1 = get_data(data_cfg$datadir1)
df2 = get_data(data_cfg$datadir2)
source("src/data/etl.R")
data_cfg<- fromJSON(file='config/data-params.json')
clean_data()
df1 = get_data(data_cfg$datadir1)
df2 = get_data(data_cfg$datadir2)
source("src/analysis/GolubAnalysis.R")
source("src/cleaning/GolubCleaning.R")
data_cfg<- fromJSON(file='config/data-params.json')
clean_data()
df1 = get_data(data_cfg$datadir1)
df2 = get_data(data_cfg$datadir2)
qq_plot(df1, 'data/out',TRUE)
qq_plot(df1, 'data/out',TRUE)
qq_plot(df1, 'data/out',TRUE)
qq_plot(df1, 'data/out',TRUE)
source("src/analysis/GolubAnalysis.R")
qq_plot(df1, 'data/out',TRUE)
hist_tstat(df2,'data/out',FALSE)
qq_plot(df1, 'data/out',TRUE)
